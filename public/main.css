/*!**********************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \**********************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Cormorant+Garamond:wght@300;400&display=swap);
/*!**************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss (1) ***!
  \**************************************************************************************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Martel:wght@200;300;400&display=swap);
/*!**************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss (2) ***!
  \**************************************************************************************************************************************************************************************/
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home__link__icon, .home__gallery, .home, .detail__button__icon, .detail__media__image, .detail, .collection__content, .collection__gallery__media__image, .collection__gallery, .collection__wrapper, .collection, .about__highlight__media__image, .about__gallery__media__image, .about__content__media__image, .navigation, .preloader {
  width: 100%;
  height: 100%;
  left: 0%;
  position: absolute;
  top: 0;
}

.home, .detail, .preloader {
  display: flex;
  align-items: center;
  justify-content: center;
}

.dg.ac {
  z-index: 9999 !important;
}

.home__titles, .collection__titles {
  position: absolute;
  align-items: center;
  top: 50%;
  left: 50%;
  display: flex;
  transform: translate(-50%, -50%) rotate(-90deg);
}

.home__titles__label, .collection__titles__label {
  text-transform: uppercase;
  transform: rotate(90deg);
  text-align: center;
  margin: 0 3rem;
  letter-spacing: 0.1rem;
}

.home__titles__title, .collection__titles__title {
  padding-top: 2rem;
}

.detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collection__titles__label {
  font-family: "Martel";
  font-size: 1.2rem;
  font-weight: 400;
}

.home__link, .preloader__number {
  font-family: "Martel";
  font-size: 1.4rem;
  font-weight: 400;
}

.detail__information__item__description, .detail__information__highlight_text, .collection__article__description, body {
  font-family: "Martel";
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}

.navigation__list__link {
  font-family: "Cormorant Garamond";
  font-size: 2rem;
}

.detail__information__link {
  font-family: "Cormorant Garamond";
  font-size: 3rem;
}

.preloader__text {
  font-family: "Cormorant Garamond";
  font-size: 5.3rem;
}

.collection__article__title {
  font-family: "Cormorant Garamond";
  font-size: 6rem;
}

.about__title {
  font-family: "Cormorant Garamond";
  font-size: 10rem;
}

.detail__information__title {
  font-family: "Cormorant Garamond";
  font-size: 12rem;
  line-height: 0.82;
}

.about__highlight__title, .home__titles__title, .collection__titles__title {
  font-family: "Cormorant Garamond";
  font-size: 20rem;
}

* {
  box-sizing: border-box;
}

html {
  font-size: calc(100vw / 1920 * 10);
}

@media (max-width: 767px) {
  body {
    font-size: 100px;
  }
}

a {
  color: inherit;
  outline: none;
  text-decoration: none;
}

img {
  vertical-align: middle;
}

button {
  color: inherit;
  background: none;
  outline: none;
  cursor: pointer;
  border: none;
}

.preloader {
  background-color: #c97164;
  color: #faf8f5;
  display: none;
  text-align: center;
  z-index: 3;
}

.preloader__text {
  max-width: 66rem;
}

.preloader__number {
  position: absolute;
  bottom: 7.3rem;
  left: 50%;
  transform: translateX(-50%);
}

.navigation {
  z-index: 2;
  color: #faf8f5;
  height: 10rem;
}

.navigation__link {
  position: absolute;
  left: 4rem;
  top: 4rem;
  width: 13rem;
  height: 2rem;
  font-size: 0;
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  right: 4rem;
  top: 4rem;
}

.about {
  background: #b2bbc3;
  color: #37384c;
}

.about__title {
  margin: auto;
  text-align: center;
  max-width: 124rem;
  line-height: 1.15;
}

.about__content {
  margin: 20rem auto;
  display: flex;
  justify-content: center;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}

.about__content__wrapper {
  display: flex;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}

.about__content__box {
  display: flex;
}

.about__content__label {
  font-weight: bold;
  width: 18rem;
  text-transform: uppercase;
}

.about__content__description {
  width: 36rem;
  font-weight: bold;
}
.about__content__description p:not(:first-child) {
  margin-top: 2.5rem;
}

.about__content:nth-child(3) .about__content__media {
  width: 54rem;
  height: 89rem;
  position: relative;
  margin-left: 18rem;
}
.about__content:nth-child(5) .about__content__media {
  width: 96rem;
  height: 60rem;
  position: relative;
  margin-left: 18rem;
}
.about__content:nth-child(8) .about__content__media {
  width: 96rem;
  height: 60rem;
  position: relative;
  margin-right: 18rem;
}
.about__content:nth-child(9) .about__content__media {
  width: 61rem;
  height: 86rem;
  position: relative;
  margin-left: 22rem;
}

.about__content__media__image {
  object-fit: cover;
}

.about__gallery {
  position: relative;
  height: 58.6rem;
  overflow: hidden;
  margin: 20rem 0;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  position: absolute;
  display: flex;
  align-items: center;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  position: relative;
  height: 43rem;
  width: 30rem;
  margin: 0 4rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}

.about__highlight__wrapper {
  height: 104rem;
  width: 144rem;
  position: relative;
  margin: auto;
}
.about__highlight:nth-child(4) .about__highlight__wrapper {
  width: 104rem;
}

.about__highlight__label {
  text-transform: uppercase;
  position: absolute;
  left: 50%;
  top: 4rem;
  transform: translate(-50%);
  text-align: center;
  width: 9.6rem;
  letter-spacing: 0.1rem;
}

.about__highlight__title {
  transform: translate(-50%, -50%) rotate(-90deg);
  position: absolute;
  padding-bottom: 5rem;
  top: 50%;
  left: 50%;
}

.about__highlight__media {
  position: absolute;
  height: 76rem;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  right: 0;
  bottom: 0;
}

.about__highlight__media__image {
  object-fit: cover;
}

.collection {
  background: #bc978c;
  color: #faf8f5;
}

.collection__wrapper {
  overflow: hidden;
}

.collection__gallery__wrapper {
  display: flex;
  align-items: center;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.collection__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collection__gallery__media {
  width: 44.7rem;
  height: 63.1rem;
  position: relative;
}

.collection__gallery__media__image {
  object-fit: cover;
}

.collection__article {
  position: absolute;
  left: 8rem;
  opacity: 0;
  bottom: 8rem;
}
.collection__article--active {
  opacity: 1;
}

.collection__article__description {
  max-width: 44rem;
}

.detail {
  background: #bc978c;
  color: #faf8f5;
}

.detail__wrapper {
  display: flex;
  align-items: center;
}

.detail__media {
  height: 78.2rem;
  width: 55.4rem;
  position: relative;
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  padding-left: 8.2rem;
}

.detail__information__collection {
  text-transform: uppercase;
  margin-bottom: 3.7rem;
}

.detail__information__title {
  max-width: 60rem;
}

.detail__information__content {
  padding-left: 18rem;
}

.detail__information__highlights {
  margin-top: 6rem;
}

.detail__information__highlight {
  display: flex;
  align-items: center;
}
.detail__information__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__infoformation__highlight_icon {
  height: 4rem;
  width: 4rem;
  border-radius: 50%;
  border: 1px solid currentColor;
  margin-right: 4rem;
}

.detail__information__list {
  margin-top: 4rem;
}

.detail__information__item {
  align-items: center;
  display: flex;
}
.detail__information__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__item__title {
  width: 10rem;
}

.detail__information__item__description {
  max-width: 44rem;
}

.detail__information__link {
  margin-top: 3rem;
  display: inline-block;
}

.detail__button {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 6rem;
  width: 12.4rem;
  position: absolute;
  left: 50%;
  bottom: 2rem;
  transform: translate(-50%);
  z-index: 2;
}

.home {
  background-color: #c97164;
  color: #faf8f5;
  text-align: center;
}
.home:before, .home:after {
  content: "";
  width: 100%;
  height: 24rem;
  position: absolute;
  left: 0;
  z-index: 1;
}
.home:before {
  background: linear-gradient(to bottom, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home:after {
  background: linear-gradient(to top, #c97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  height: 6rem;
  width: 29rem;
  display: flex;
  position: absolute;
  align-items: center;
  justify-content: center;
  bottom: 5rem;
  left: 50%;
  transform: translateX(-50%);
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  z-index: 2;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/